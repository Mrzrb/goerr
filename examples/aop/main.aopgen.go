// Code generated by aop annotation processor. DO NOT EDIT.
// versions:
//		go: go1.21.0
//		go-annotation: 0.1.0
//		aop: 0.1

package main

import (
	"github.com/Mrzrb/goerr/annotations/aop"
)

type BisClientProxy struct {
	inner  *BisClient
	aspect *Demo
}

func NewBisClientProxy(inner *BisClient) *BisClientProxy {
	return &BisClientProxy{
		inner:  inner,
		aspect: &Demo{},
	}
}

type BisClientInterface interface {
	Hello() (ret1 error)
}

func (r *BisClientProxy) Hello() (ret1 error) {
	joint := aop.Jointcut{
		TargetName: "BisClient",
		TargetType: "BisClient",
		Args:       []aop.Args{},
		Fn: func() {
			ret1 = r.inner.Hello()
		},
	}

	r.aspect.Handle(joint)

	return ret1
}
